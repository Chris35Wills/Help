GAWK notes
==========

Example command:
`gawk '{if($1 == "width:")			printf("%d\n", $2)}' < $this_dem_par`

The above calls the gawk library up
{if($1 == "width:")	 <- this means "if column 1 is equal to width"
printf("%d\n", $2)}' <- this means "print as a decimal integer (%d) the new
						character (\n) found in column 2 ($2)
< $this_dem_par      <- this means "acccording to the file specifed by variable this_dem_par

Examples of how to use a gawk command in a csh script:
======================================================

		  #######################
		  		  ####################### The echo pipes in variables to a gawk printf function
				  ####################### The printf function then prints them out (after doing some maths)
		  #######################

		  set map_br_northing = `echo $map_tl_northing $npost $map_lines | gawk '{printf("%d\n", $1 + $2*$3)}'`
		  
		  #######################
		  		  ####################### The -v establish variables that can be used in gawk (e.g. tl_northing) taken from csh (e.g. $tl_northing)
		  		  ####################### The NF is a keyword to assess how many fields there are ina  record (see http://www.thegeekstuff.com/2010/01/8-powerful-awk-built-in-variables-fs-ofs-rs-ors-nr-nf-filename-fnr/) 
				  ####################### The '{if......}' \ part states the formatting and to which variables that should be set to 
		  		  ####################### "< file" is the file passed into gawk
 		  		  ####################### "> file" is the file passed out
	      #######################

          if(1) then    # convert to local coordinates
                gawk \
                    -v tl_northing=$tl_northing \
                    -v tl_easting=$tl_easting \
                    -v npost=$npost \
                    -v epost=$epost \
                    '{if(NF==3) printf("%10d\t%10d\t%2d\n", tl_easting+($1*epost), tl_northing+($2*npost), $3)}' \
                    < areas/$mli_dir/$glacier.$area.txt \
                    > areas/$mli_dir/$glacier.$area.map.txt
                endif

Doing simple maths using gawk (you can't do much mathematically in csh):
========================================================================

set lines = `echo $tl_northing $br_northing $post | gawk '{printf("%d\n", ($1 - $2) / $3 )}'`
		echo "lines: $lines"

	## So you echo some pre-defined variable
	## Pipe them into gawk (using the |) 
	## Process them with a gawk tool (notice the variable numbers match the variable order that you piped in so $1 is $tl_northing)

Extract data from complex lines (with funny separators)
=======================================================	
	
	set utm_zone = `gawk '{if($1 == "map"); split($0, aaa, ","); printf("%3.0f\n", aaa[8])}'< $hyper_file`
		echo "utm_zone: $utm_zone"
	
	## $0 denotes the whole line
	## split($0, aaa, ",") -- this means that you split the whole line at separator "," and put all parts of it into an array (using the ","
	   separator
	   
	## Assuming $0 == map info = {UTM,1,1,566295,7134507,3,3,22,North,WGS84,units=Meters}
	## This will reuslt in extraction of the value "22"
	
